version: "3.9"

services:

 # reverse-proxy
 #============================================================================
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.6
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - whoami
      - echowebhooks

 # whoami
 #============================================================================
  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"


 # echowebhooks
 #============================================================================
  echowebhooks:
    image: "${ECHO_STARTER_IMAGE_NAME}:${ECHO_STARTER_VERSION}"
    labels:
      - "traefik.http.routers.echowebhooks.rule=Host(`${ECHO_STARTER_DOMAIN}`)"
      - "traefik.http.services.echowebhooks.loadbalancer.server.port=80"
    ports:
      - ${ECHO_STARTER_PORT}:80
    logging:
      driver: "json-file"
      options:
        max-size: "${CONTAINER_LOG_SIZE}"
        max-file: "${CONTAINER_LOG_COUNT}"
 
    environment:
      APPLICATION_ENVIRONMENT: "${APPLICATION_ENVIRONMENT}"
      PORT: "80"
      AUTH_PROVIDER: "${ECHO_STARTER_AUTH_PROVIDER}"
      AUTH_STORE: "${ECHO_STARTER_AUTH_STORE}"
      LOG_LEVEL: "${ECHO_STARTER_LOG_LEVEL}"
      PRETTY_LOG: "${ECHO_STARTER_PRETTY_LOG}"
      OIDC__DOMAIN: "${OIDC__DOMAIN}"
      OIDC__CLIENT_ID: "${OIDC__CLIENT_ID}"
      OIDC__CLIENT_SECRET: "${OIDC__CLIENT_SECRET}"
      OIDC__CALLBACK_URL: "${OIDC__CALLBACK_URL}"
      OIDC__INSECURE: "${OIDC__INSECURE}"
      SECURE_COOKIE_HASH_KEY: "wVsibJSltJAgkniN9tlzy39ZDUzuMTSFwsQek6qTcuY="
      SECURE_COOKIE_ENCRYPTION_KEY: "7fB3PkhfOKsbU/2vE2KQdLqu0jGZ+GLaEL5AQ7maUw4="
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      SESSION_ENGINE: "${ECHO_STARTER_SESSION_ENGINE}"
      SESSION_MAX_AGE_SECONDS: "${ECHO_STARTER_SESSION_MAX_AGE_SECONDS}"
      AUTH_COOKIE_EXPIRE_SECONDS: "${ECHO_STARTER_AUTH_COOKIE_EXPIRE_SECONDS}"
      REDIS_URL: "${REDIS_NAME}:${REDIS_PORT}"
      

    entrypoint: ["/app/server"]

 # redis
 #============================================================================
  redis:
      image: '${REDIS_IMAGE}:${REDIS_VERSION}'
      ports:
        - ${REDIS_PORT}:${REDIS_PORT}
      volumes:
        - 'redis_data:/bitnami/redis/data'
      environment:
        - ALLOW_EMPTY_PASSWORD=no
        - REDIS_PASSWORD=${REDIS_PASSWORD}
        - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL

volumes:
  redis_data:
    driver: local